==========================
Using CIA with Sourceforge
==========================

contributed by Christopher Forsythe
===================================

What is CIA?
------------

CIA is one of the more innovative projects to come to open source. What CIA does is amazing, it keeps track of projects. A lot of them. It keeps stats, keeps a list of who commits to source code repositories, and even has meta data regarding projects.

CIA also provides you an rss feed of commits, a web page to provide information about a projects recent commits, and a bot that will sit in your projects irc channel displaying new commits, if you have a channel.

The CIA project started in June of 2003 by Micah. Many other projects quickly adopted CIA, and use it within their projects, in order to provide services to all of their developers and users. CIA keeps you informed, and that is what matters.

How CIA works is simple. When you commit something, it runs a script, and then emails CIA. CIA then does all of it's work, and posts to the rss feed, the website, and the irc channel. It formats this information to include file names modified, comment, and developer id.


Focus of this How-To:
---------------------

Most of the issues with CIA, up to this point, have been with Sourceforge projects. Perhaps this is because, as of this writing, 99% of all activity has occured from Sourceforge. Hence, this will be the focused on setting up CIA for Sourceforge projects.



Setting up CIA: Step one, getting the right stuff
-------------------------------------------------

In order to get CIA to post information, it has to be emailed. In order for CIA to email, you have to run a script from the source repository. For Sourceforge, the type of repository is known as CVS (Concurrent Versions System). 

The script you need is called a "Client Script". Visit CIA's `list of clients`_ or jump directly to the
`CVS client script`_. Once you have the script, you can move on to the next step.

.. _list of clients: /doc/clients
.. _CVS client script: http://cia.navi.cx/clients/cvs/ciabot_cvs.pl


Setting up CIA: Step two, CVSROOT:
----------------------------------

Once you have the script, you need to put it in the right location. This requires you to checkout a CVS Module called "CVSROOT". (You must capitalize this word, as this is case sensitive.)

You can do this in one of two ways. If you have not checked out a CVS Module for your project, do the following::
	
	cvs -z3 -d:ext:developername@cvs.sourceforge.net:/cvsroot/projectname co CVSROOT

Replace "developername" with your sourceforge id, and "projectname" with your projects name.


If you have already checked out your project once, cd into the location of that on your hard disk. Once you have moved into this directory, issue the following command::
	
	cvs co CVSROOT
	

Move or copy the file from step one into the CVSROOT directory, and then cd into it. Once you have done that, issue the following command to add the file to cvs::
	
	cvs add ciabot_cvs.pl

You will get a notification that the file will be added once you do a "cvs commit". We will issue that once we have modified the files we need to. On to step 3.


Setting up CIA: Step three, modifying files:
--------------------------------------------

Once you have added the script to cvs, you need to do a few things so it is run automatically
after every commit. This requires modifying the "checkoutlist" and "loginfo" files. If you have
syncmail_ installed, you'll see lines for it in these files already.

.. _syncmail: http://sourceforge.net/projects/cvs-syncmail

First you need to add a line to a file called "checkoutlist". Files stored in CVSROOT are stored in a non-plaintext format, adding lines to checkoutlist makes it so that a plaintext copy of the file will be stored in CVSROOT as well. Add this line to the end of checkoutlist::
	
	ciabot_cvs.pl

Next, add this line to the "loginfo" file. loginfo runs the script. Here is the line::
	
	ALL /usr/bin/perl $CVSROOT/CVSROOT/ciabot_cvs.pl %{,,,s} $USER

The last file to modify is ciabot_cvs.pl itself. You have to tell it where to send emails, and other information. Open ciabot_cvs.pl in a text editor, and then scroll down to the "Configuration" section. Edit the following lines:

* $project = "projectname";
	
	Replace projectname with your project's unix name assigned by Sourceforge, or whatever name you are going by. This name should be fairly short, and shoudln't contain any whitespace or odd characters. It will be used in your project's URL on CIA, and it will be used on IRC. You can use metadata_ later to assign a longer name for use in the web interface.

* $from_email = "leader@example.org";
	
	Put in one of the project leaders email addresses here.


That's it. You can configure other options as you like, but these are the required fields. Once you have done all of this, there is only one thing left to do. Issue the following command from inside the CVSROOT folder::
	
	cvs commit

You should now be setup. If all went well, the next commit you make should show up in #commits and on the web. If you would like to have a bot in your irc channel or edit your project's metadata_, contact
`Micah via email`_, or as 'scanline' on irc.freenode.net. Everything else should be ready to go. Congratulations on setting up CIA to work with your project.

.. _metadata: /doc/metadata
.. _Micah via email: mailto:micah@navi.cx

.. _Christopher Forsythe: mailto:the_tick@brok3n.org
.. _site: http://brok3n.org
