==========
To-do List
==========

Documentation
-------------

- Add examples and definitions for messages of various types, and rulesets

- Add some info on the XML-RPC interface


Web
---

- Make CIA more accessable to text browsers and non-CSS browsers. This probably
  means using some tricks like Plone does to have headings and links that are hidden when
  using CSS, and making headings and tabs into <h1> tags and <li> tags rather than
  just <div>s and such.

- Clean up the CSS. It still uses tables to position the heading and the columns,
  where it should be using CSS positioning.

- Detect URLs in commit messages in the XHTML formatters and automatically generate links.
  Gnome commits often contain bug tracker URLs.

- Detect changelog entries in commits and represent them as unordered lists. In HTML,
  the asterisks look rather ugly.

Code
-----

- Web interface for editing rulesets and stats metadata- how would we handle
  authentication, if necessary?

  One idea:

    Initially anyone can edit any stats metadata or any ruleset- within limits.
    Potentially harmful rulesets should not be allowed, and deleting stats
    targets shouldn't be allowed. This level of priviledge could be represented
    perhaps by a 'guest' key granting some set of capabilities.

    In this state, anyone can 'claim' a ruleset or stats target. Claiming the target
    would then lock out the 'guest' key and grant a new key for editing that target/rule.
    The idea would be that the person responsible for the CIA connection to a project
    would claim it, then they could distribute keys to others that also want to edit
    it. If a target was claimed maliciously or unintentionally, the proper owner
    could dispute the claim.

    This seems like it would work alright for stats targets, as they always exist,
    they just require the addition of metadata. Rulesets however must be created.
    It's probably a bad idea to let anyone create stats targets or xmlrpc targets,
    as a badly constructed or malicious stats target can fill the database with
    garbage, and a malicious xmlrpc target could put CIA into an infinite loop.
    It is however a good idea to let people get CIA into their own IRC channel without
    having to request help from someone with authority.

    So, perhaps anyone can create an IRC ruleset, then either claim that ruleset
    for themselves (with a key being granted) or leave it open to the public?

- Rulesets could use some sort of subroutine call, maybe by embedding a <ruleset>
  tag with a different ruleset's URI. A new URI scheme could be added for rulesets
  that will never be executed on their own but should be referenceable from inside
  others.

- rrdtool (or similar) for graphing stats target activity

- Link from authors and projects in the stats browser's message lists to the appropriate
  author and project pages. It would be great to, while browsing a project, be able
  to easily see what a particular person is working on elsewhere. A few things to consider:

    - stats metadata could be used to make the connection without hardcoding
      any assumptions about the stats hierarchy into CIA, but where do these go?

    - How do we account for any differences in commit authors with stats author
      pages, as caused by the ruleset?

  One potential solution is, for each potentially linkable part of the commit message,
  the formatter (or some preprocessor that the runs before the formatter) looks for a
  stats:// ruleset using that part of the message in a path= attribute. If it finds one,
  it hyperlinks to the stats target that results from running the message through that
  ruleset. If there are multiple messages with matching path= attributes, it would have
  some way to determine which one is best.

