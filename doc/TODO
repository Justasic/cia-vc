To-do List
==========

Documentation
-------------

- Add examples and definitions for messages of various types, and rulesets

- Add some info on the XML-RPC interface


Web Interface
-------------

- Make CIA more accessable to text browsers and non-CSS browsers. This probably
  means using some tricks like Plone does to have headings and links that are hidden when
  using CSS, and making headings and tabs into <h1> tags and <li> tags rather than
  just <div>s and such.

- Clean up the CSS. It still uses tables to position the heading and the columns,
  where it should be using CSS positioning.

- Some of the stats catalogs are getting rather big and it would be good
  to make the full message list accessable and searchable. An SQL-aware table
  widget for this has been started in the cia-data-driven-tables branch.

- Clean up the relation graphing interface so it isn't stuck hackishly at /graph.
  Maybe stats metadata could be used to attach graphs to individual targets?

- Possibly allow anyone to edit metadata before a project has been 'claimed' by one person
  and assigned a key?

- Implement a web interface for editing rulesets. This should be fairly easy
  since the Keyring object was implemented for the metadata editor.

- rrdtool (or similar) for graphing stats target activity

- Link from authors and projects in the stats browser's message lists to the appropriate
  author and project pages. It would be great to, while browsing a project, be able
  to easily see what a particular person is working on elsewhere. A few things to consider:

    - stats metadata could be used to make the connection without hardcoding
      any assumptions about the stats hierarchy into CIA, but where do these go?

    - How do we account for any differences in commit authors with stats author
      pages, as caused by the ruleset?

  One potential solution is, for each potentially linkable part of the commit message,
  the formatter (or some preprocessor that the runs before the formatter) looks for a
  stats:// ruleset using that part of the message in a path= attribute. If it finds one,
  it hyperlinks to the stats target that results from running the message through that
  ruleset. If there are multiple messages with matching path= attributes, it would have
  some way to determine which one is best.

IRC
---

- Bots will rejoin when kicked from a channel, they need to remove or disable their
  irc:// ruleset.

  This will become important once the web interface for IRC ruleset editing
  is written- if someone invites a CIA bot into a channel where it isn't
  wanted, the channel's ops need to be able to ask it to leave. As it is
  now, the botnet tries a little too hard and the bot will
  just immediately rejoin.

- Track bandwidth averages per-request and per-bot. This could be used to load balance
  the bots by rearranging requests among them, and it would make a nice indicator
  for the IRC status page

