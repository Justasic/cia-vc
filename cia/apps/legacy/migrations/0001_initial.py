# Generated by Django 2.1.3 on 2019-01-01 19:48

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuditTrail',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('timestamp', models.IntegerField()),
                ('uid', models.IntegerField()),
                ('action_domain', models.CharField(max_length=96)),
                ('action_name', models.TextField()),
                ('main_param', models.TextField(blank=True)),
                ('params', models.BinaryField(blank=True)),
                ('allowed', models.IntegerField()),
                ('results', models.BinaryField(blank=True)),
            ],
            options={
                'db_table': 'audit_trail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Capabilities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cap_md5', models.CharField(max_length=96)),
                ('cap_repr', models.TextField()),
            ],
            options={
                'db_table': 'capabilities',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Meta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=96)),
                ('value', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'db_table': 'meta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rulesets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uri', models.TextField()),
                ('xml', models.TextField()),
            ],
            options={
                'db_table': 'rulesets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatsCatalog',
            fields=[
                ('path', models.CharField(db_column='target_path', max_length=255, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'stats_catalog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatsRelations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strength', models.IntegerField()),
                ('freshness', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stats_relations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatsSubscriptions',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('target_path', models.CharField(max_length=255)),
                ('expiration', models.IntegerField()),
                ('scope', models.CharField(blank=True, max_length=96)),
                ('client', models.CharField(blank=True, max_length=192)),
                ('trigger', models.TextField()),
                ('failures', models.IntegerField()),
            ],
            options={
                'db_table': 'stats_subscriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('uid', models.IntegerField(primary_key=True, serialize=False)),
                ('secret_key', models.CharField(max_length=96)),
                ('active', models.IntegerField()),
                ('full_name', models.TextField(blank=True)),
                ('email', models.TextField(blank=True)),
                ('creation_time', models.IntegerField()),
                ('key_atime', models.IntegerField(blank=True, null=True)),
                ('login_name', models.CharField(blank=True, max_length=96)),
                ('login_passwd_md5', models.CharField(blank=True, max_length=96)),
                ('login_atime', models.IntegerField(blank=True, null=True)),
                ('login_mtime', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatsCounters',
            fields=[
                ('target', models.OneToOneField(db_column='target_path', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='legacy.StatsCatalog')),
                ('name', models.CharField(max_length=96)),
                ('event_count', models.IntegerField()),
                ('first_time', models.IntegerField(blank=True, null=True)),
                ('last_time', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stats_counters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatsMetadata',
            fields=[
                ('target', models.OneToOneField(db_column='target_path', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='metadata', serialize=False, to='legacy.StatsCatalog')),
                ('name', models.CharField(max_length=96)),
                ('mime_type', models.CharField(max_length=96)),
                ('value', models.TextField()),
                ('mtime', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stats_metadata',
                'managed': False,
            },
        ),
    ]
